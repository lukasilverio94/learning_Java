package lists;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import entities.Employee;

public class Program {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		List<Employee> employeeList = new ArrayList<>();

		System.out.print("How many employees will be registered?");
		int answer = sc.nextInt();

		for (int i = 0; i < answer; i++) {
			System.out.println();

			System.out.println("Employee #" + (i + 1) + ":");
			System.out.print("Id: ");
			Integer id = sc.nextInt();
			sc.nextLine();
			System.out.print("Name: ");
			String name = sc.nextLine();
			System.out.print("Salary: ");
			Double salary = sc.nextDouble();
		

			Employee employee = new Employee(id, name, salary);
			employeeList.add(employee);
		}

		System.out.print("Enter the employee id that will have salary increase: ");
		int idSalaryToBeIncreased = sc.nextInt();

		Employee emp = employeeList.stream().filter(x -> x.getId() == idSalaryToBeIncreased).findFirst().orElse(null);
		
		if (emp == null) {
			System.out.println("This id does not exist!");
		} else {
			System.out.print("Enter the percentage: ");
			double percentage = sc.nextDouble();
			emp.increaseSalary(percentage);
		}
		
		System.out.println();
		// Printing List of Employees
		System.out.println("List of employees: ");
		for (Employee employee : employeeList) {
			System.out.println(employee.toString());
		}

		sc.close();
	}
	
	// Alternative to the 1 line stream + filter method
	// To use it, change above the logic as well.
	
//	public static int findPositionIndexOnListById(List<Employee> list, int id) {
//		for (int i = 0 ; i < list.size(); i++) {
//			if(list.get(i).getId() == id) {
//				return i;
//			}
//		}
//		return -1;
//	}
	
	

}
